/**
Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true
**/

/**
 * SOLUTION
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */
 
 var isIsomorphic = function(s,t) {
    let obj1 = {},
        obj2 = {};
    if (s.length !== t.length) {
       return false
    }
    for(let i = 0; i < s.length; i++) {
      if ( obj1[s[i]] !== obj2[t[i]]) {
         return false
      } else {
          obj1[s[i]] = i,
          obj2[t[i]] = i
        }
    };
    return true
};
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
